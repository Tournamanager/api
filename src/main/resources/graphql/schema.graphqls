type Query {
    users : [User]
    user(id:ID, uuid:String) : User

    teams(count: Int, name: String) : [Team]
    team(id:ID, name: String) : Team

    tournaments(idOfOwner: Int) : [Tournament]
    tournament(id:ID, name: String) : Tournament

    matches(count: Int) : [Match]
    match(id:ID) : Match
}

type Mutation {
    createUser(uuid:String!) : User
    deleteUser(uuid:String!) : String

    createTournament(name:String!, description:String, owner:Int, numberOfTeams:Int, method:String):Tournament
    deleteTournament(id:Int!):String
    addTeamToTournament(tournamentId:Int!, teamId:Int!): String

    removeTeamFromTournament(tournamentId:Int!, teamId:Int!): String

    updateTournament(id:Int!, name : String!, description:String!, ownerId:Int!, numberOfTeams:Int!) : Tournament

    startTournament(id:Int!):Tournament

    createTeam(name:String!) : Team
    deleteTeam(id:Int!) : String
    updateTeam(id:Int!, name:String!) : Team
    addUserToTeam(teamId:Int!, userId:Int!) : String
    removeUserFromTeam(teamId: Int!, userId:Int!) : String

    updateMatch(id:Int!, date:String!, winnerId:Int!, homeScore:Int!, awayScore:Int!):Match
}
